name: Release

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  test:

    strategy:
      max-parallel: 20
      matrix:
        os: [ macos-latest ]
        python-version: [ 3.7, 3.8 ]
        # This distribution of tests is designed to ensure an approximately even time to finish for parallel jobs.
        pkg:
          - tests

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Prepare Packmol
        run: |
          echo $HOME
          echo "$HOME/work/mdgo/mdgo/tests/packmol" >> $GITHUB_PATH
      - name: Prepare Selenium
        # https://github.com/marketplace/actions/setup-chromedriver
        uses: nanasess/setup-chromedriver@master
      - name: Start XVFB
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
      - name: pytest ${{ matrix.pkg }}
        run: |
          pytest ${{ matrix.pkg }}

  release:
    needs: test
    strategy:
      max-parallel: 2
      matrix:
        os: [ macos-latest ]
        python-version: [ 3.7 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -e .
      - name: Release
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip install setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*.whl
          twine upload --skip-existing dist/*.tar.gz